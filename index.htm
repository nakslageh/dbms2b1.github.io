<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
	<meta name='generator' content='ExamView HTML Generator 1.0.5'>
	<meta name='robots' content='noindex,nofollow'>
	<title>DBMS SET2B1 2s2024-2025</title>
	<style type='text/css'>
		.spacer { line-height:.7em; }
		.title { font-size:13pt; font-weight:bold; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.qnumber { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; text-align:right; }
		.choice { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.default { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.qinfo { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.points { font-size:8pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		TD.pad { padding: 0pt 4pt 0pt 4pt; }
		.font1 { font-family:"Times New Roman", "Times", serif; }
		.font2 { font-family:"Arial", "Helvetica", sans-serif; }
		.font3 { font-family:"Arial", "Helvetica", sans-serif; }
	</style>
<script type='text/javascript' language='JavaScript1.1'>
<!--
	// Copyright (c) 2000-2008 eInstruction Corp.
	var listMap = '111111111111111111111111111111111111111111111111111111111111';
	var qtypeMap = '222222222222222222222222222222222222222222222222222222222222';
	var ansMap = new Array(60);
	var ptsMap = new Array(60);
	ansMap[0] = '45';
	ptsMap[0] = 1;
	ansMap[1] = '40';
	ptsMap[1] = 1;
	ansMap[2] = '47';
	ptsMap[2] = 1;
	ansMap[3] = '45';
	ptsMap[3] = 1;
	ansMap[4] = '41';
	ptsMap[4] = 1;
	ansMap[5] = '45';
	ptsMap[5] = 1;
	ansMap[6] = '43';
	ptsMap[6] = 1;
	ansMap[7] = '4c';
	ptsMap[7] = 1;
	ansMap[8] = '4a';
	ptsMap[8] = 1;
	ansMap[9] = '4e';
	ptsMap[9] = 1;
	ansMap[10] = '49';
	ptsMap[10] = 1;
	ansMap[11] = '4e';
	ptsMap[11] = 1;
	ansMap[12] = '49';
	ptsMap[12] = 1;
	ansMap[13] = '4c';
	ptsMap[13] = 1;
	ansMap[14] = '4c';
	ptsMap[14] = 1;
	ansMap[15] = '52';
	ptsMap[15] = 1;
	ansMap[16] = '50';
	ptsMap[16] = 1;
	ansMap[17] = '50';
	ptsMap[17] = 1;
	ansMap[18] = '57';
	ptsMap[18] = 1;
	ansMap[19] = '55';
	ptsMap[19] = 1;
	ansMap[20] = '51';
	ptsMap[20] = 1;
	ansMap[21] = '52';
	ptsMap[21] = 1;
	ansMap[22] = '55';
	ptsMap[22] = 1;
	ansMap[23] = '59';
	ptsMap[23] = 1;
	ansMap[24] = '5a';
	ptsMap[24] = 1;
	ansMap[25] = '5e';
	ptsMap[25] = 1;
	ansMap[26] = '5f';
	ptsMap[26] = 1;
	ansMap[27] = '5e';
	ptsMap[27] = 1;
	ansMap[28] = '5c';
	ptsMap[28] = 1;
	ansMap[29] = '5c';
	ptsMap[29] = 1;
	ansMap[30] = '5e';
	ptsMap[30] = 1;
	ansMap[31] = '43';
	ptsMap[31] = 1;
	ansMap[32] = '43';
	ptsMap[32] = 1;
	ansMap[33] = '47';
	ptsMap[33] = 1;
	ansMap[34] = '45';
	ptsMap[34] = 1;
	ansMap[35] = '44';
	ptsMap[35] = 1;
	ansMap[36] = '42';
	ptsMap[36] = 1;
	ansMap[37] = '46';
	ptsMap[37] = 1;
	ansMap[38] = '49';
	ptsMap[38] = 1;
	ansMap[39] = '48';
	ptsMap[39] = 1;
	ansMap[40] = '4e';
	ptsMap[40] = 1;
	ansMap[41] = '49';
	ptsMap[41] = 1;
	ansMap[42] = '4e';
	ptsMap[42] = 1;
	ansMap[43] = '4e';
	ptsMap[43] = 1;
	ansMap[44] = '4d';
	ptsMap[44] = 1;
	ansMap[45] = '4c';
	ptsMap[45] = 1;
	ansMap[46] = '52';
	ptsMap[46] = 1;
	ansMap[47] = '52';
	ptsMap[47] = 1;
	ansMap[48] = '50';
	ptsMap[48] = 1;
	ansMap[49] = '52';
	ptsMap[49] = 1;
	ansMap[50] = '57';
	ptsMap[50] = 1;
	ansMap[51] = '56';
	ptsMap[51] = 1;
	ansMap[52] = '57';
	ptsMap[52] = 1;
	ansMap[53] = '55';
	ptsMap[53] = 1;
	ansMap[54] = '59';
	ptsMap[54] = 1;
	ansMap[55] = '5a';
	ptsMap[55] = 1;
	ansMap[56] = '59';
	ptsMap[56] = 1;
	ansMap[57] = '5a';
	ptsMap[57] = 1;
	ansMap[58] = '5d';
	ptsMap[58] = 1;
	ansMap[59] = '59';
	ptsMap[59] = 1;
	function HandleSubmit(f)
	{
		var	MAGIC = 840;
		var	totalCorrect = 0;
		var	totalPossible = 0;
		var	numCorrect = 0;
		var	numPossible = 0;
		var	numBlank = 0;
		var	index;
		var	msg;
		var	i;

		f.student_name.value = StripSpaces(f.student_name.value);
		f.student_id.value = StripSpaces(f.student_id.value);
		f.student_email.value = StripSpaces(f.student_email.value);

		FixMR(f);
		FixMTF(f);
		index = 0;
		for (i=0; i < f.length; ++i) {
			if (f.elements[i].name.indexOf(":") > 0) {
				if (listMap.charAt(index) == "1") {
					listIndex = f.elements[i].selectedIndex;
					text = StripSpaces(f.elements[i].options[listIndex].value);
				} else {
					f.elements[i].value = StripSpaces(f.elements[i].value);
					text = f.elements[i].value;
				}

				if (text.length == 0)
					++numBlank;
				++index;
			}
		}

		if (f.student_name.value == "") {
			alert("Student name cannot be blank.");
			return(false);
		}

		if (numBlank > 0) {
			if (numBlank == 1)
				msg = "1 question";
			else
				msg = numBlank + " questions";
			if (!confirm("You have not answered " + msg +
				"  Are you sure you want to end the test?"))
				return(false);
		}

		index = 0;
		var scoreDetails = new Array();
		for (i=0; i < f.length; ++i) {
			if (f.elements[i].name.indexOf(":") > 0) {
				if (listMap.charAt(index) == "1") {
					listIndex = f.elements[i].selectedIndex;
					text = f.elements[i].options[listIndex].value;
				} else
					text = f.elements[i].value;

				numPossible = ptsMap[index] * MAGIC;
				if (ansMap[index] == "")
					scoreDetails[index] = "?--";
				else {
					var scoreResult = ScoreAnswer(index, text, numPossible);
					numCorrect = scoreResult.numPoints;
					scoreDetails[index] = (scoreResult.isCorrect) ? " " : "X";
					scoreDetails[index] += (Math.round(numCorrect * 100 / MAGIC) / 100).toString();
					totalCorrect += numCorrect;
					totalPossible += numPossible;
				}

				scoreDetails[index] += "/" + (numPossible / MAGIC);
				++index;
			}
		}

		f.score_details.value = scoreDetails.join("|");
		f.score_correct.value = Math.round(totalCorrect * 100 / MAGIC) / 100;
		f.score_possible.value = Math.round(totalPossible * 100 / MAGIC) / 100;
		if (totalPossible > 0)
			f.score_percent.value = Math.round(100.0 * totalCorrect / totalPossible);
		else
			f.score_percent.value = 0;

		return(true);
	}

	function TranslateAnswer(s, answerIndex)
	{
		var	value;
		var	newString;
		var	code;
		var	i;

		value = (answerIndex % 31) + 1;
		newString = "";
		for (i=0; i < s.length; i += 2) {
			code = parseInt(s.substring(i, i + 2), 16);
			newString += String.fromCharCode(code ^ value);
		}

		return(newString);
	}

	function ScoreAnswer(answerIndex, responseText, pointsPossible)
	{
		var answerText = TranslateAnswer(ansMap[answerIndex], answerIndex);
		var qtype = qtypeMap.charAt(answerIndex);
		var nrExactMatch = false;
		var result = new Array();

		result.numPoints = 0;
		result.isCorrect = false;

		if (qtype == "3" && answerText.substring(0, 2) == "p:") {
			answerText = answerText.substr(2);
			if (responseText.toUpperCase() == answerText.toUpperCase())
				result.isCorrect = true;
			else
				result.numPoints = MultiResponseCompare(responseText, answerText, pointsPossible);
		} else if (qtype == "6") {
			if (answerText.substring(0, 2) == "==") {
				answerText = answerText.substr(2);
				nrExactMatch = true;
			}
			if (NumericCompare(responseText, answerText, nrExactMatch))
				result.isCorrect = true;
		} else if (qtype == "7") {
			if (CompletionCompare(responseText, answerText))
				result.isCorrect = true;
		} else if (responseText.toUpperCase() == answerText.toUpperCase())
			result.isCorrect = true;

		if (result.isCorrect)
			result.numPoints = pointsPossible;

		return(result);
	}

	function StripSpaces(s)
	{
		var	len;
		var	i;

		len = s.length;
		for (i=len - 1; i >= 0 && s.charAt(i) == " "; --i)
			len = i;

		if (len == 0)
			s = "";
		else if (len != s.length)
			s = s.substring(0, len);

		return(s);
	}

	function MultiResponseCompare(responseText, answerText, pointsPossible)
	{
	}

	function NumericCompare(response, answer, exactMatch)
	{
	}


	function CompletionCompare(responseText, answerText)
	{
		return(false);
	}

	function FixMTF(f)
	{
	}

	function FixMR(f)
	{
	}

	function AllowReset()
	{
		return(window.confirm("Do you want to clear all of your answers?"));
	}

	function Restart()
	{
		if (AllowReset()) {
			document.TestForm.onreset = function() { };
			document.TestForm.reset();
			document.TestForm.onreset = function() { AllowReset(); };
		}
	}
// -->
</script>
</head>
<body onResize='if(document.layers && navigator.appVersion.indexOf("Win") < 0){history.go(0);}'
bgcolor='#FFFFFF' style='background-image:url(index_files/header.gif); background-repeat:no-repeat'>
<noscript>
	<h3><font color='#FF0000'>Javascript not enabled</font></h3>
</noscript>
<script type='text/javascript' language='JavaScript'>
<!--
if (navigator.appName.indexOf("Netscape") >= 0) {
	if (parseInt(navigator.appVersion.charAt(0)) < 4)
		alert("This document requires Netscape Navigator version 4.0 or later.");
} else if (navigator.appName.indexOf("Explorer") >= 0) {
	if (parseInt(navigator.appVersion.charAt(0)) < 4)
		alert("This document requires Internet Explorer version 4.0 or later.");
}
// -->
</script>
<form name='TestForm' action='http://score.examview.com/cgi-bin/results.cgi' method='POST'
	onSubmit='return(HandleSubmit(this))' onReset='return(AllowReset())'>
<input type='hidden' name='product_version' value='6.2.1'>
<input type='hidden' name='instructor_name' value='Levi'>
<input type='hidden' name='instructor_formalname' value='Levi Corvera'>
<input type='hidden' name='instructor_email' value='corveralevistudents@gmail.com'>
<input type='hidden' name='instructor_org' value='SNSU'>
<input type='hidden' name='instructor_city' value='Surigao'>
<input type='hidden' name='instructor_state' value='13'>
<input type='hidden' name='test_name' value='DBMS SET2B1 2s2024-2025'>
<input type='hidden' name='other_label' value='Other'>
<input type='hidden' name='test_mixed_questions' value='0'>
<input type='hidden' name='score_correct' value='0'>
<input type='hidden' name='score_possible' value='0'>
<input type='hidden' name='score_percent' value='0'>
<input type='hidden' name='score_subjective' value='0'>
<input type='hidden' name='score_details' value=''>
<input type='hidden' name='score_showresults' value='1'>
<div class='spacer'>&nbsp;</div>
<div class='default'>
	<div style='margin-left:1em'>
	<b>Name:</b>&nbsp;<input type='text' name='student_name' size='30'> &nbsp;&nbsp;
	<b>ID:</b>&nbsp;<input type='text' name='student_id' size='12'><br>
	<div class='spacer'>&nbsp;</div>
	<b>Email:</b>&nbsp;<input type='text' name='student_email' size='45'><br><br>
	</div>
</div>
<div class='title'>DBMS SET2B1 2s2024-2025</div>

<table align='left' width='100%' border='0' cellpadding='0' cellspacing='0'>
<tr valign='top'>
	<td colspan='3'><br>
<div class='default'><b>Multiple Choice</b><span style='font-size:10pt'><br></span><i>Identify the
choice that best completes the statement or answers the question.</i></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:1' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;1.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following statements is true regarding candidate keys?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>A candidate key can be either a primary key or a foreign key.</span></td><td
width='4%'><div class='choice'>c.</div></td><td width='46%'><span class='default'>Candidate keys are
not essential in relational database design.</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>There can only be one candidate key in a
table.</span></td><td><div class='choice'>d.</div></td><td><span class='default'>Candidate keys are
potential primary keys for a table.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:2' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;2.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following is NOT a benefit of normalization in a relational
database?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Improved data integrity</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Reduced data
redundancy</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Enhanced data retrieval performance</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Simplified database
maintenance</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:3' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;3.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider a scenario where a company database has two tables:
&quot;Employees&quot; and &quot;Departments.&quot; Which type of key would connect these tables to
represent the relationship between employees and the department they belong to?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Composite Key</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Candidate Key</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Primary Key</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Foreign Key</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:4' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;4.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which normal form allows a table to be broken down into smaller, related tables
to avoid redundancy?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Fourth Normal Form (4NF)</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>First Normal Form
(1NF)</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Third Normal Form (3NF)</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Second Normal Form (2NF)</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:5' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;5.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a database table, what does the term &quot;referential integrity&quot;
ensure?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Each record has a unique identifier.</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>The database schema is properly
designed.</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Data is stored in normalized form.</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Foreign key values match the primary key values
in another table.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:6' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;6.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a database table, what is the primary objective of normalization?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>To reduce the number of tables</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>To minimize data
redundancy</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>To increase data duplication</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>To simplify database
queries</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:7' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;7.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>When considering keys in a relational database, what is the primary difference
between a primary key and a candidate key?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Primary keys are selected by the database administrator, while candidate keys are
automatically generated.</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Primary keys are used for referencing other tables, while candidate
keys are used for internal indexing.</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Primary keys uniquely identify each record,
while candidate keys can potentially contain duplicates.</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Primary keys are chosen from the set of
candidate keys to uniquely identify each record.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:8' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;8.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which normal form ensures that there are no repeating groups of data within a
table?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Second Normal Form (2NF)</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Boyce-Codd Normal Form
(BCNF)</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Third Normal Form (3NF)</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>First Normal Form (1NF)</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:9' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;9.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>When designing a database, what is the purpose of identifying functional
dependencies?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>To ensure referential integrity.</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>To determine the candidate
keys.</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>To optimize query performance.</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>To establish relationships between
tables.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:10' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;10.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is the process of organizing data in a database efficiently by eliminating
redundant data and ensuring data integrity?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Data Manipulation</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Data Mining</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Data Warehousing</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Data
Normalization</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:11' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;11.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which type of key uniquely identifies each record in a relational database
table?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Candidate Key</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Foreign Key</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Primary Key</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Composite Key</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:12' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;12.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a student database, the &quot;Student ID&quot; attribute is assigned as the
primary key. What would happen if two students have the same student ID?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'> The database will prompt the administrator to manually resolve the
conflict.</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>Both students will share the same ID without any issue.</span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'>It violates the
integrity constraints, and the database will reject the insertion of the duplicate
ID.</span></td><td><div class='choice'>d.</div></td><td><span class='default'>The database will
automatically assign a unique ID to one of the students.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:13' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;13.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider a scenario where a table has a multi-valued attribute. Which normal
form would help in resolving this issue?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>First Normal Form (1NF)</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Second Normal Form
(2NF)</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Third Normal Form (3NF)</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Fourth Normal Form (4NF)</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:14' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;14.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a database table, why might it be beneficial to use surrogate keys instead of
natural keys?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Surrogate keys are shorter in length, saving storage space.</span></td><td
width='4%'><div class='choice'>c.</div></td><td width='46%'><span class='default'>Surrogate keys are
more easily remembered by users.</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Surrogate keys are automatically generated,
eliminating the need for user input.</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Surrogate keys are immutable, preventing data
inconsistencies.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:15' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;15.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider a scenario where a table contains a repeating group of data. Which
normal form would address this issue?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Fourth Normal Form (4NF)</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>First Normal Form
(1NF)</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Second Normal Form (2NF)</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Third Normal Form (3NF)</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:16' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;16.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Given the following tables:<br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='26%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='18%'></td><td width='41%'></td><td
width='41%'></td></tr></table><br>Table: Departments<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='17%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Department</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>HR</td></tr><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>2</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>IT</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Finance</td></tr><tr height='0'
style='border:none'><td width='28%'></td><td width='72%'></td></tr></table><br>What would be the
result of the following SQL query:<br>SELECT Employees.FirstName, Departments.Department<br>FROM
Employees<br>LEFT JOIN Departments ON Employees.ID = Departments.ID;<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>| FirstName | Department |<br>| John&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |
HR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Jane&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>|
Alice&nbsp;&nbsp;&nbsp;&nbsp; | Finance&nbsp;&nbsp;&nbsp; |</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>| FirstName | Department |<br>|
John&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | HR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>|
Jane&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | IT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>|
Alice&nbsp;&nbsp;&nbsp;&nbsp; | Finance&nbsp;&nbsp;&nbsp; </span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'>| FirstName |
Department |<br>| John&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |
HR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Jane&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |
IT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Alice&nbsp;&nbsp;&nbsp;&nbsp;
|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>| FirstName | Department |<br>|
John&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | HR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>|
Jane&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | IT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
|<br>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Finance&nbsp;&nbsp;&nbsp;
|<br></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:17' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;17.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following tables:<br><br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='26%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='18%'></td><td width='41%'></td><td
width='41%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='26%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='18%'></td><td
width='41%'></td><td width='41%'></td></tr></table>Which SQL query would retrieve the first and last
names of employees who have made at least one order, along with the total number of orders
they&#039;ve made?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>HAVING
TotalOrders &gt;= 1<br>GROUP BY Employees.ID;</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>SELECT Employees.FirstName, Employees.LastName,
COUNT(Orders.OrderID) AS TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID =
Orders.Employee<br>GROUP BY Employees.ID;</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>WHERE
TotalOrders &gt;= 1<br>GROUP BY Employees.ID;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:18' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;18.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following SQL query:<br>SELECT Orders.OrderID, Customers.FirstName,
Customers.LastName<br>FROM Orders<br>LEFT JOIN Customers ON Orders.CustomerID =
Customers.CustomerID;<br><br>If a customer has placed multiple orders, what will be the result of
this query?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Only the orders placed by customers who have placed no orders will be
returned.</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>Only the orders placed by customers who have placed exactly one order will be
returned.</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>All orders will be returned, along with the first and last names of their respective
customers.</span></td><td><div class='choice'>d.</div></td><td><span class='default'>All orders will
be returned, but the first and last names of customers will be null for orders placed by customers
who have placed multiple orders.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:19' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;19.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following SQL query:<br><br>SELECT Customers.FirstName,
COUNT(Orders.OrderID) AS TotalOrders<br>FROM Customers<br>LEFT JOIN Orders ON Customers.CustomerID =
Orders.CustomerID<br>GROUP BY Customers.FirstName;<br><br>What is the purpose of this query?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>It retrieves the first names of customers along with the total number of unique order
IDs associated with each customer.</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>It retrieves the total number of orders placed by each customer,
but only for customers with non-null first names.</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>It retrieves the total number of orders placed
by each customer, regardless of their first name.</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>It retrieves the first names of customers along
with the total number of orders placed by each customer.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:20' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;20.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following SQL query:<br>SELECT ProductID, SUM(Quantity) AS
TotalQuantity<br>FROM OrderDetails<br>GROUP BY ProductID<br>HAVING SUM(Quantity) &gt;
100;<br><br>What does this query do?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Retrieves the product IDs and their corresponding total quantities from the
OrderDetails table, only for products with a total quantity greater than 100.</span></td><td
width='4%'><div class='choice'>c.</div></td><td width='46%'><span class='default'>Retrieves the
product IDs and their corresponding total quantities from the OrderDetails table, without any
conditions.</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Retrieves the product IDs and their corresponding total quantities from the
OrderDetails table, only for products with a total quantity less than or equal to
100.</span></td><td><div class='choice'>d.</div></td><td><span class='default'>Retrieves the total
quantity of each product from the OrderDetails table, where the total quantity is greater than
100.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:21' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;21.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Given the following tables:<br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='28%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='17%'></td><td width='42%'></td><td
width='41%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='28%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='17%'></td><td
width='42%'></td><td width='41%'></td></tr></table><br>Which SQL query would update the last name of
the employee with ID 3 to &quot;Brown&quot;?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>UPDATE Employees<br>SET LastName = &#039;Brown&#039;<br>WHERE&nbsp;&nbsp;&nbsp;
UPDATE Employees<br>&nbsp;&nbsp; SET LastName = &#039;Brown&#039;<br>&nbsp;&nbsp; WHERE ID =
3;</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>UPDATE Employees<br>SET FirstName = &#039;Brown&#039;<br>WHERE ID =
3;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>UPDATE Employees<br>SET LastName = &#039;Brown&#039;<br>WHERE FirstName =
&#039;Alice&#039;;</span></td><td><div class='choice'>d.</div></td><td><span class='default'>UPDATE
Employees<br>SET LastName = &#039;Brown&#039;<br>WHERE ID = 3;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:22' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;22.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Given the following tables:<br><br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='28%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='17%'></td><td width='42%'></td><td
width='41%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='28%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='17%'></td><td
width='42%'></td><td width='41%'></td></tr></table>Which SQL query would retrieve the first and last
names of employees along with the total number of orders they&#039;ve made, only for employees who
have made at least two orders?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>HAVING COUNT(Orders.OrderID) &gt;= 2;<br></span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>SELECT Employees.FirstName,
Employees.LastName, SUM(Orders.OrderID) AS TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON
Employees.ID = Orders.Employee<br>GROUP BY Employees.ID<br>HAVING SUM(Orders.OrderID) &gt;=
2;<br></span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, MAX(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>HAVING MAX(Orders.OrderID) &gt;= 2;<br></span></td><td><div
class='choice'>d.</div></td><td><span class='default'>SELECT Employees.FirstName, Employees.LastName,
COUNT(Orders.OrderID) AS TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID =
Orders.Employee<br>GROUP BY Employees.ID<br>HAVING COUNT(Orders.OrderID) &gt;=
2;<br></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:23' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;23.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following SQL query:<br><br>SELECT AVG(UnitPrice) AS
AvgPrice<br>FROM Products<br>WHERE CategoryID = 1;<br><br>If the Products table contains duplicate
records for some products with CategoryID = 1, what would be the impact on the result of this
query?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>The result will be inaccurate and cannot be determined without knowing the nature of
duplicate records.</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>The result will be higher due to the presence of duplicate
records.</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>The result will remain the same regardless of duplicate records.</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>The result will be lower due to the presence of
duplicate records.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:24' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;24.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following SQL query:<br>SELECT COUNT(DISTINCT OrderID) AS
TotalOrders<br>FROM Orders;<br><br>What will be the result of this query?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>The number of unique OrderIDs in the Orders table.</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>The total number of orders in the
Orders table.</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>The average number of orders per customer.</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>The maximum OrderID value in the Orders
table.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:25' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;25.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following tables:<br><br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='26%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='18%'></td><td width='41%'></td><td
width='41%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='26%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='18%'></td><td
width='41%'></td><td width='41%'></td></tr></table>Which SQL query would retrieve the first and last
names of employees along with the total number of orders they&#039;ve made, only for employees who
have made at least one order?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>HAVING COUNT(Orders.OrderID) &gt; 0;</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>SELECT Employees.FirstName,
Employees.LastName, COUNT(Orders.OrderID) AS TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON
Employees.ID = Orders.Employee<br>GROUP BY Employees.ID<br>HAVING COUNT(Orders.OrderID) &gt;=
1;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>HAVING COUNT(Orders.OrderID) &gt; 1;</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>SELECT Employees.FirstName, Employees.LastName,
COUNT(Orders.OrderID) AS TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID =
Orders.Employee<br>GROUP BY Employees.ID<br>HAVING COUNT(Orders.OrderID) &gt;
0;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:26' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;26.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following SQL query:<br><br>SELECT Customers.CustomerID,
COUNT(Orders.OrderID) AS TotalOrders<br>FROM Customers<br>LEFT JOIN Orders ON Customers.CustomerID =
Orders.CustomerID<br>GROUP BY Customers.CustomerID;<br><br>If a customer has not placed any orders,
how will they appear in the result set?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>They will not appear in the result set.</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>They will appear with a null value
for the TotalOrders column.</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>They will appear with a count of 1
order.</span></td><td><div class='choice'>d.</div></td><td><span class='default'>They will appear
with a count of 0 orders.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:27' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;27.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Given the following tables:<br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='27%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='18%'></td><td width='43%'></td><td
width='39%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='27%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='18%'></td><td
width='43%'></td><td width='39%'></td></tr></table><br>Which SQL query would retrieve the first and
last names of employees along with the total number of orders they&#039;ve made?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, MAX(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, SUM(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td><td><div class='choice'>d.</div></td><td><span class='default'>SELECT
Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS TotalOrders<br>FROM
Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:28' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;28.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following tables:<br><br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='26%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='18%'></td><td width='41%'></td><td
width='41%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='26%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='18%'></td><td
width='41%'></td><td width='41%'></td></tr></table>Which SQL query would retrieve the first and last
names of employees along with the average number of orders they&#039;ve made?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, AVG(Orders.OrderID) AS
AvgOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, AVG(COUNT(Orders.OrderID)) AS
AvgOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, AVG(TotalOrders) AS AvgOrders<br>FROM
(SELECT ID, COUNT(OrderID) AS TotalOrders FROM Orders GROUP BY ID) AS OrdersCount<br>RIGHT JOIN
Employees ON Employees.ID = OrdersCount.ID<br>GROUP BY Employees.ID;</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>SELECT Employees.FirstName, Employees.LastName,
COUNT(Orders.OrderID) / COUNT(DISTINCT Orders.OrderID) AS AvgOrders<br>FROM Employees<br>LEFT JOIN
Orders ON Employees.ID = Orders.Employee<br>GROUP BY Employees.ID;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:29' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;29.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Given the following tables:<br><br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='83%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='34%'></td><td width='33%'></td><td
width='33%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='83%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='34%'></td><td
width='33%'></td><td width='33%'></td></tr></table>Which SQL query would retrieve the first and last
names of employees along with the total number of orders they&#039;ve made, sorted in descending
order of the total number of orders?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>ORDER BY TotalOrders DESC;</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>SELECT Employees.FirstName,
Employees.LastName, COUNT(Orders.OrderID) AS TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON
Employees.ID = Orders.Employee<br>GROUP BY Employees.ID<br>ORDER BY COUNT(Orders.OrderID)
DESC;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>INNER JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>ORDER BY TotalOrders DESC;</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName, COUNT(Orders.OrderID) AS
TotalOrders<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>GROUP BY
Employees.ID<br>ORDER BY COUNT(Orders.OrderID) DESC;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:30' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;30.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider the following tables:<br><br>Table: Employees<br><div
style='font-size:2pt'></div><table cellpadding='0' cellspacing='0' width='26%' border='0'><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style='
border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>FirstName</td><td class='pad' style=' border-top:0.8pt solid #000000; border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>LastName</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>John</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>Smith</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid
#000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Jane</td><td
class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Doe</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>3</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Alice</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>Johnson</td></tr><tr
height='0' style='border:none'><td width='18%'></td><td width='41%'></td><td
width='41%'></td></tr></table><br>Table: Orders<br><div style='font-size:2pt'></div><table
cellpadding='0' cellspacing='0' width='26%' border='0'><tr valign='top'><td class='pad' style='
border-left:0.8pt solid #000000; border-top:0.8pt solid #000000; border-right:0.8pt solid #000000;
border-bottom:0.8pt solid #000000;'>ID</td><td class='pad' style=' border-top:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>OrderID</td><td class='pad'
style=' border-top:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>Employee</td></tr><tr valign='top'><td class='pad' style=' border-left:0.8pt solid #000000;
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td><td class='pad' style='
border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1001</td><td class='pad'
style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid #000000;'>1</td></tr><tr
valign='top'><td class='pad' style=' border-left:0.8pt solid #000000; border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>2</td><td class='pad' style=' border-right:0.8pt solid
#000000; border-bottom:0.8pt solid #000000;'>1002</td><td class='pad' style=' border-right:0.8pt
solid #000000; border-bottom:0.8pt solid #000000;'>2</td></tr><tr valign='top'><td class='pad'
style=' border-left:0.8pt solid #000000; border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>3</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt solid
#000000;'>1003</td><td class='pad' style=' border-right:0.8pt solid #000000; border-bottom:0.8pt
solid #000000;'>1</td></tr><tr height='0' style='border:none'><td width='18%'></td><td
width='41%'></td><td width='41%'></td></tr></table>Which SQL query would retrieve the first and last
names of employees who have not made any orders?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>SELECT Employees.FirstName, Employees.LastName<br>FROM Employees<br>INNER JOIN Orders
ON Employees.ID = Orders.Employee<br>WHERE Orders.Employee IS NULL;</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>SELECT Employees.FirstName,
Employees.LastName<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>WHERE
COUNT(Orders.OrderID) = 0;</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>SELECT Employees.FirstName,
Employees.LastName<br>FROM Employees<br>LEFT JOIN Orders ON Employees.ID = Orders.Employee<br>WHERE
Orders.Employee IS NULL;</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>SELECT Employees.FirstName, Employees.LastName<br>FROM Employees<br>LEFT JOIN Orders
ON Employees.ID = Orders.Employee<br>GROUP BY Employees.ID<br>HAVING COUNT(Orders.OrderID) =
0;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:31' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;31.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a music streaming service database, you have tables for users, playlists, and
songs. Each playlist can contain multiple songs, and each song can be included in multiple playlists.
What type of relationship exists between the playlists and songs tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Many-to-Many relationship</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>One-to-One
relationship</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>One-to-Many relationship</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>None of the choices</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:32' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;32.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a database for an online shopping platform. You have tables
for customers, orders, and products. Each order can contain multiple products, and each product can
be included in multiple orders. What type of relationship exists between the orders and products
tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>None of the choices</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>One-to-One relationship</span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'>Many-to-Many
relationship</span></td><td><div class='choice'>d.</div></td><td><span class='default'>One-to-Many
relationship</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:33' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;33.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>When normalizing a database, which normal form ensures that there are no
repeating groups within a table?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>First Normal Form (1NF)</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Second Normal Form
(2NF)</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Third Normal Form (3NF)</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Fourth Normal Form (4NF)</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:34' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;34.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are modeling a database for a customer relationship management (CRM) system.
Each customer can have multiple contacts, and each contact belongs to exactly one customer. Which of
the following SQL statements correctly creates a table to store contact information while maintaining
a one-to-many relationship with customers?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255)<br>);<br><br>CREATE TABLE Contacts
(<br>&nbsp;&nbsp;&nbsp; ContactID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; CustomerID
INT<br>);</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; ContactID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (ContactID) REFERENCES Contacts(ContactID)<br>);<br><br>CREATE
TABLE Contacts (<br>&nbsp;&nbsp;&nbsp; ContactID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50)<br>);</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>CREATE TABLE
Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name
VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; ContactID INT<br>);<br><br>CREATE TABLE Contacts
(<br>&nbsp;&nbsp;&nbsp; ContactID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; CustomerID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (CustomerID) REFERENCES
Customers(CustomerID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp;
CustomerID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255)<br>);<br><br>CREATE TABLE
Contacts (<br>&nbsp;&nbsp;&nbsp; ContactID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; CustomerID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (CustomerID) REFERENCES
Customers(CustomerID)<br>);</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:35' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;35.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are tasked with designing a database for a school management system. The
system should store information about students, teachers, classes, and grades. Which of the following
entities should be included as separate tables in the database design?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Students, Teachers, Classes, and Grades</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Students and Teachers
only</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Classes and Grades only</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Students, Teachers, and Classes only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:36' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;36.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a database for a hotel management system. You need to create a
table to store information about hotel rooms, including the room number, type (e.g., single, double),
and price per night. Which SQL statement correctly creates the table for hotel rooms?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>CREATE TABLE Rooms (<br>&nbsp;&nbsp;&nbsp; RoomNumber INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; RoomType VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; PricePerNight DECIMAL(10,
2)<br>);</span></td><td width='4%'><div class='choice'>c.</div></td><td width='46%'><span
class='default'>CREATE TABLE Rooms (<br>&nbsp;&nbsp;&nbsp; RoomID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; RoomNumber INT,<br>&nbsp;&nbsp;&nbsp; RoomType
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; PricePerNight DECIMAL(10, 2),<br>&nbsp;&nbsp;&nbsp; CONSTRAINT
fk_room_number FOREIGN KEY (RoomNumber) REFERENCES Rooms(RoomID)<br>);</span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'>CREATE TABLE Rooms
(<br>&nbsp;&nbsp;&nbsp; RoomID INT AUTO_INCREMENT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; RoomNumber INT
UNIQUE,<br>&nbsp;&nbsp;&nbsp; RoomType VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; PricePerNight DECIMAL(10,
2)<br>);</span></td><td><div class='choice'>d.</div></td><td><span class='default'>CREATE TABLE Rooms
(<br>&nbsp;&nbsp;&nbsp; RoomID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; RoomNumber
INT,<br>&nbsp;&nbsp;&nbsp; RoomType VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; PricePerNight DECIMAL(10,
2),<br>&nbsp;&nbsp;&nbsp; CONSTRAINT fk_room_number UNIQUE
(RoomNumber)<br>);</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:37' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;37.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a student information system database, you have a table for students and a
table for courses. Each student can enroll in multiple courses, and each course can have multiple
students enrolled. What type of relationship exists between the students and courses tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>None of the choices</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>One-to-Many relationship</span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'>One-to-One
relationship</span></td><td><div class='choice'>d.</div></td><td><span class='default'>Many-to-Many
relationship</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:38' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;38.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>When designing a database schema for a social media platform, you decide to have
separate tables for users, posts, and comments. Each post can have multiple comments, and each
comment is associated with exactly one post. What type of relationship exists between the posts and
comments tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>One-to-Many relationship</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Many-to-Many
relationship</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>One-to-One relationship</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>None of the choices</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:39' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;39.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a database for a blogging platform. Each blog post can have
multiple comments, and each comment belongs to exactly one blog post. What type of relationship
exists between the blog posts and comments tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>One-to-Many relationship</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>One-to-One
relationship</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>None of the choices</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Many-to-Many relationship</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:40' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;40.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a database for an online bookstore. Each book has multiple
authors, and each author can write multiple books. Which of the following SQL statements correctly
creates a table to store information about books and their authors, while maintaining a many-to-many
relationship?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>CREATE TABLE Books (<br>&nbsp;&nbsp;&nbsp; BookID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Title VARCHAR(255)<br>);<br><br>CREATE TABLE Authors
(<br>&nbsp;&nbsp;&nbsp; AuthorID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50)<br>);<br><br>CREATE TABLE BookAuthors
(<br>&nbsp;&nbsp;&nbsp; BookID INT,<br>&nbsp;&nbsp;&nbsp; AuthorID INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN
KEY (BookID) REFERENCES Books(BookID),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (AuthorID) REFERENCES
Authors(AuthorID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>CREATE TABLE Books (<br>&nbsp;&nbsp;&nbsp;
BookID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Title VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; AuthorID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID)<br>);<br><br>CREATE
TABLE Authors (<br>&nbsp;&nbsp;&nbsp; AuthorID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50)<br>);</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>CREATE TABLE Books
(<br>&nbsp;&nbsp;&nbsp; BookID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Title
VARCHAR(255)<br>);<br><br>CREATE TABLE Authors (<br>&nbsp;&nbsp;&nbsp; AuthorID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; FirstName VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; BookID INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (BookID) REFERENCES
Books(BookID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>CREATE TABLE Books (<br>&nbsp;&nbsp;&nbsp;
BookID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Title VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; AuthorID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID)<br>);<br><br>CREATE
TABLE Authors (<br>&nbsp;&nbsp;&nbsp; AuthorID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; FirstName
VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; LastName VARCHAR(50)<br>);<br><br>CREATE TABLE BookAuthors
(<br>&nbsp;&nbsp;&nbsp; BookID INT,<br>&nbsp;&nbsp;&nbsp; AuthorID INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN
KEY (BookID) REFERENCES Books(BookID),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (AuthorID) REFERENCES
Authors(AuthorID)<br>);</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:41' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;41.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a database for a product inventory system. Each product has
multiple attributes such as name, description, price, and category. Which of the following SQL
statements correctly creates a table to store product information?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp; ProductID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Description
TEXT,<br>&nbsp;&nbsp;&nbsp; Price DECIMAL(10, 2),<br>&nbsp;&nbsp;&nbsp; CategoryID
INT<br>);<br><br>CREATE TABLE Categories (<br>&nbsp;&nbsp;&nbsp; CategoryID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; CategoryName VARCHAR(50),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (CategoryID)
REFERENCES Products(CategoryID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp;
ProductID INT AUTO_INCREMENT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name
VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Description TEXT,<br>&nbsp;&nbsp;&nbsp; Price DECIMAL(10,
2),<br>&nbsp;&nbsp;&nbsp; CategoryID INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (CategoryID) REFERENCES
Categories(CategoryID)<br>);<br><br>CREATE TABLE Categories (<br>&nbsp;&nbsp;&nbsp; CategoryID INT
PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; CategoryName VARCHAR(50)<br>);</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>CREATE TABLE
Products (<br>&nbsp;&nbsp;&nbsp; ID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name
VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Description TEXT,<br>&nbsp;&nbsp;&nbsp; Price DECIMAL(10,
2),<br>&nbsp;&nbsp;&nbsp; Category VARCHAR(50)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp;
ProductID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Description
TEXT,<br>&nbsp;&nbsp;&nbsp; Price DECIMAL(10, 2),<br>&nbsp;&nbsp;&nbsp; Category
VARCHAR(50)<br>);</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:42' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;42.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a database for a movie rental service. You have tables for
movies, customers, and rentals. Each rental record must be associated with exactly one movie and one
customer. What type of relationship exists between the rentals, movies, and customers tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>One-to-Many relationship</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>None of the
choices</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>One-to-One relationship</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Many-to-Many relationship</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:43' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;43.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a company&#039;s database, you have tables for employees and departments.
Each employee belongs to exactly one department, but each department can have multiple employees.
What type of relationship exists between the employees and departments tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>One-to-One relationship</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>None of the
choices</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>One-to-Many relationship</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Many-to-Many relationship</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:44' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;44.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are creating a database schema for a university. You have tables for
students, courses, and enrollments. Each enrollment record should be associated with exactly one
student and one course. What type of relationship exists between the students, courses, and
enrollments tables?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Many-to-Many relationship</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>One-to-One
relationship</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>None of the choices</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>One-to-Many relationship</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:45' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;45.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are implementing a database transaction to handle a financial transaction
where a customer deposits money into their account. To ensure atomicity and consistency, which SQL
statement correctly initiates the transaction, updates the account balance, and commits the changes
to the database?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>START TRANSACTION;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
789;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>BEGIN;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
789;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
789;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
789;<br>ROLLBACK;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:46' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;46.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>When processing payroll transactions in a company database, which ACID property
ensures that once a transaction is committed and changes are saved to the database, they persist even
in the event of system failures such as power outages?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Atomicity</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Durability</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Consistency</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Isolation</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:47' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;47.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a multi-user database system, two users simultaneously attempt to update the
same row in a table. Which concurrency control technique allows both transactions to proceed but
ensures that the final changes are applied in the order they were initiated?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Optimistic concurrency control</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Pessimistic concurrency
control</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Two-phase locking</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Timestamp-based concurrency control</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:48' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;48.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a banking system database, a customer wants to transfer funds from their
savings account to their checking account. Which ACID property ensures that the transaction completes
all its operations or none at all, preventing partial transfers?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Durability</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Atomicity</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Consistency</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Isolation</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:49' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;49.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a database system, you want to implement a concurrency control mechanism to
ensure that users can read data without being affected by concurrent writes. Which isolation level
should you choose to achieve this goal?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Read uncommitted</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Serializable</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Repeatable read</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Read committed</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:50' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;50.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are implementing a system for online auction bidding. Which ACID property
ensures that once a bid is accepted and committed to the database, it remains valid and cannot be
undone, even if the system crashes?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Durability</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Atomicity</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Isolation</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Consistency</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:51' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;51.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a database system, you want to ensure that transactions are executed in an
isolated manner to prevent interference between concurrent transactions. Which isolation level should
you choose to achieve this goal?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Read committed</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Serializable</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Read uncommitted</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Repeatable read</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:52' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;52.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In an airline reservation system, two users simultaneously attempt to book the
last available seat on the same flight. Which concurrency control technique prevents both users from
booking the same seat by acquiring a lock on the seat until one transaction completes?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Timestamp-based concurrency control</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Pessimistic concurrency
control</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Two-phase commit</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Optimistic concurrency control</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:53' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;53.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a hotel reservation system, multiple users attempt to book the same room for
the same dates concurrently. Which ACID property ensures that each transaction sees a consistent
state of the data, even if other transactions are running concurrently?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Isolation</span></td><td width='4%'><div class='choice'>c.</div></td><td
width='46%'><span class='default'>Durability</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Atomicity</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Consistency</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:54' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;54.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are working on a banking application where customers can transfer funds
between their accounts. To ensure the ACID properties, you implement a database transaction to handle
fund transfers. Which SQL statement correctly initiates a transaction for transferring funds from one
account to another, ensuring atomicity and consistency?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET Balance = Balance - 100 WHERE AccountID =
123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>ROLLBACK;</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>BEGIN;<br>UPDATE Accounts SET Balance = Balance
- 100 WHERE AccountID = 123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET Balance = Balance - 100 WHERE AccountID =
123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>START TRANSACTION;<br>UPDATE Accounts SET Balance = Balance - 100 WHERE AccountID =
123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>ROLLBACK;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:55' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;55.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Consider a scenario where multiple users are simultaneously updating the
inventory levels of a product in an e-commerce database. Which concurrency control technique ensures
that only one user can modify the inventory at a time, preventing conflicts and
inconsistencies?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Pessimistic concurrency control</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Optimistic concurrency
control</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Two-phase locking</span></td><td><div class='choice'>d.</div></td><td><span
class='default'>Timestamp-based concurrency control</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:56' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;56.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a manufacturing inventory system, two users simultaneously attempt to
withdraw the last available unit of a product from the inventory. Which concurrency control technique
allows both transactions to proceed but checks for conflicts during commit time and rolls back any
transaction that conflicts with another?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='46%'><span
class='default'>Pessimistic concurrency control</span></td><td width='4%'><div
class='choice'>c.</div></td><td width='46%'><span class='default'>Two-phase
commit</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>Optimistic concurrency control</span></td><td><div
class='choice'>d.</div></td><td><span class='default'>Timestamp-based concurrency
control</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:57' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;57.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are implementing a banking system where customers can transfer funds between
their accounts. To ensure the ACID properties, which SQL statement correctly initiates a transaction
and updates the account balances, ensuring atomicity and consistency?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET Balance = Balance - 100 WHERE AccountID =
123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>ROLLBACK;</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET
Balance = Balance - 100 WHERE AccountID = 123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE
AccountID = 456;</span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Accounts SET Balance = Balance - 100 WHERE AccountID =
123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>START TRANSACTION;<br>UPDATE Accounts SET Balance = Balance - 100 WHERE AccountID =
123;<br>UPDATE Accounts SET Balance = Balance + 100 WHERE AccountID =
456;<br>ROLLBACK;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:58' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;58.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are designing a system for a hotel reservation website where multiple users
can book rooms simultaneously. To manage concurrency, you decide to implement row-level locking.
Which SQL statement correctly acquires a lock on a specific row of the `<b>Rooms</b>` table when a
user starts booking a room?<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>BEGIN TRANSACTION;<br>SELECT * FROM Rooms WHERE RoomNumber = 101 FOR
UPDATE;</span></td></tr><tr valign='baseline'><td><div class='choice'>b.</div></td><td><span
class='default'>START TRANSACTION;<br>SELECT * FROM Rooms WHERE RoomNumber = 101 FOR
UPDATE;</span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>LOCK TABLES Rooms WRITE;<br>SELECT * FROM Rooms WHERE RoomNumber =
101;</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>LOCK TABLES Rooms READ;<br>SELECT * FROM Rooms WHERE RoomNumber =
101;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:59' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;59.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>In a multi-user database system, you want to ensure that a series of operations
are executed as a single unit of work to maintain the ACID properties. Which SQL statement correctly
initiates a transaction and ensures that all subsequent operations are either fully completed or
fully rolled back in case of failure?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>BEGIN TRANSACTION;<br>UPDATE Employees SET Salary = Salary * 1.05 WHERE Department =
&#039;Sales&#039;;<br>DELETE FROM Transactions WHERE Type =
&#039;Refund&#039;;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>BEGIN TRANSACTION;<br>UPDATE Employees SET
Salary = Salary * 1.05 WHERE Department = &#039;Sales&#039;;<br>DELETE FROM Transactions WHERE Type =
&#039;Refund&#039;;</span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'>START TRANSACTION;<br>UPDATE Employees SET
Salary = Salary * 1.05 WHERE Department = &#039;Sales&#039;;<br>DELETE FROM Transactions WHERE Type =
&#039;Refund&#039;;<br>COMMIT;</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>START TRANSACTION;<br>UPDATE Employees SET
Salary = Salary * 1.05 WHERE Department = &#039;Sales&#039;;<br>DELETE FROM Transactions WHERE Type =
&#039;Refund&#039;;<br>ROLLBACK;</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:60' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;60.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>You are tasked with designing a database for an e-commerce platform. The
database should store information about products, customers, and orders. Each order can contain
multiple products, and each product can be ordered multiple times. Evaluate which of the following
SQL statements correctly creates normalized tables to represent this data in the third normal form
(3NF)?</div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp; ProductID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Price DECIMAL(10,
2)<br>);<br><br>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; OrderID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)<br>);<br><br>CREATE TABLE
Orders (<br>&nbsp;&nbsp;&nbsp; OrderID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; OrderDate
DATE<br>);<br><br>CREATE TABLE OrderDetails (<br>&nbsp;&nbsp;&nbsp; OrderID
INT,<br>&nbsp;&nbsp;&nbsp; ProductID INT,<br>&nbsp;&nbsp;&nbsp; Quantity INT,<br>&nbsp;&nbsp;&nbsp;
FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (ProductID)
REFERENCES Products(ProductID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp;
ProductID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Price
DECIMAL(10, 2),<br>&nbsp;&nbsp;&nbsp; OrderID INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (OrderID)
REFERENCES Orders(OrderID)<br>);<br><br>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT
PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255)<br>);<br><br>CREATE TABLE Orders
(<br>&nbsp;&nbsp;&nbsp; OrderID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; CustomerID
INT,<br>&nbsp;&nbsp;&nbsp; OrderDate DATE<br>);<br><br>CREATE TABLE OrderDetails
(<br>&nbsp;&nbsp;&nbsp; OrderID INT,<br>&nbsp;&nbsp;&nbsp; ProductID INT,<br>&nbsp;&nbsp;&nbsp;
Quantity INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (OrderID) REFERENCES
Orders(OrderID),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (ProductID) REFERENCES
Products(ProductID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp;
ProductID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Price
DECIMAL(10, 2),<br>&nbsp;&nbsp;&nbsp; OrderID INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (OrderID)
REFERENCES Orders(OrderID)<br>);<br><br>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT
PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; OrderID
INT,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)<br>);<br><br>CREATE TABLE
Orders (<br>&nbsp;&nbsp;&nbsp; OrderID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; OrderDate
DATE<br>);<br><br>CREATE TABLE OrderDetails (<br>&nbsp;&nbsp;&nbsp; OrderID
INT,<br>&nbsp;&nbsp;&nbsp; ProductID INT,<br>&nbsp;&nbsp;&nbsp; Quantity INT,<br>&nbsp;&nbsp;&nbsp;
FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (ProductID)
REFERENCES Products(ProductID)<br>);</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>CREATE TABLE Products (<br>&nbsp;&nbsp;&nbsp;
ProductID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255),<br>&nbsp;&nbsp;&nbsp; Price
DECIMAL(10, 2)<br>);<br><br>CREATE TABLE Customers (<br>&nbsp;&nbsp;&nbsp; CustomerID INT PRIMARY
KEY,<br>&nbsp;&nbsp;&nbsp; Name VARCHAR(255)<br>);<br><br>CREATE TABLE Orders (<br>&nbsp;&nbsp;&nbsp;
OrderID INT PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; CustomerID INT,<br>&nbsp;&nbsp;&nbsp; OrderDate
DATE,<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (CustomerID) REFERENCES
Customers(CustomerID)<br>);<br><br>CREATE TABLE OrderDetails (<br>&nbsp;&nbsp;&nbsp; OrderID
INT,<br>&nbsp;&nbsp;&nbsp; ProductID INT,<br>&nbsp;&nbsp;&nbsp; Quantity INT,<br>&nbsp;&nbsp;&nbsp;
FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),<br>&nbsp;&nbsp;&nbsp; FOREIGN KEY (ProductID)
REFERENCES Products(ProductID)<br>);</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
</table>
<br clear='all'>
<br>
<br>
<table align='left' width='100%' cellpadding='0' cellspacing='0' border='0'>
<tr>
    <td bgcolor='#000000'>
    <div style='font-size:1pt'>&nbsp;</div>
    </td>
</tr>
<tr>
    <td><input type='image' src='index_files/submit.gif' alt='Grade and Submit'>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<a href='#' onclick='Restart(); return false'><img
	    src='index_files/restart.gif' border='0' alt='Start Over'></a>
    </td>
</tr>
</table>
</form>
</body>
</html>